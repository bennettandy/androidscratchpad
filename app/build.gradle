plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'androidx.navigation.safeargs.kotlin'
}

android {
    compileSdkVersion 30
    buildToolsVersion "30.0.3"

    defaultConfig {
        applicationId "uk.co.avsoftware.fragvm"
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        // Room Options
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [
                        "room.schemaLocation":"$projectDir/schemas".toString(),
                        "room.incremental":"true",
                        "room.expandProjection":"true"]
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }

        debug {
            //applicationIdSuffix ".debug"
            debuggable true
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    buildFeatures{
        dataBinding = true
        // for view binding :
        // viewBinding = true
    }

}

dependencies {

    // Import the BoM for the Firebase platform
    implementation platform('com.google.firebase:firebase-bom:26.6.0')

    // Declare the dependencies for the Crashlytics and Analytics libraries
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'


    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.3.2'
    implementation 'androidx.appcompat:appcompat:1.2.0'
    implementation 'com.google.android.material:material:1.3.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.0.4'
    implementation 'androidx.lifecycle:lifecycle-livedata-ktx:2.3.0'
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.3.0'

    // retrofit
    implementation "com.squareup.retrofit2:retrofit:$retrofitVersion"
    implementation "com.squareup.retrofit2:converter-gson:$retrofitVersion"
    implementation "com.squareup.retrofit2:adapter-rxjava3:2.9.0"

    // RX Java Libraries
    implementation "io.reactivex.rxjava3:rxjava:$rxJavaVersion"
    implementation "io.reactivex.rxjava3:rxkotlin:$rxKotlinVersion"
    implementation "io.reactivex.rxjava3:rxandroid:$rxAndroidVersion"

    implementation 'androidx.annotation:annotation:1.1.0'

    // Hilt
    implementation "com.google.dagger:hilt-android:$hilt_version"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.3'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.3'
    kapt "com.google.dagger:hilt-android-compiler:$hilt_version"
    implementation "androidx.hilt:hilt-lifecycle-viewmodel:$hiltAndroidXVersion"
    kapt "androidx.hilt:hilt-compiler:$hiltAndroidXVersion"

    // Coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$coroutinesVersion"

    // Room
    implementation "androidx.room:room-runtime:$roomVersion"
    kapt "androidx.room:room-compiler:$roomVersion"
    implementation "androidx.room:room-rxjava3:2.3.0-beta02"
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$roomVersion"
    // optional - Test helpers
    testImplementation "androidx.room:room-testing:$roomVersion"

    testImplementation "junit:junit:$junitVersion"
    //androidTestImplementation 'androidx.test.ext:junit:1.1.2'
    // Espresso Unit Testing
    androidTestImplementation "androidx.test.espresso:espresso-core:$espressoVersion"
    // Intent Interception within Espresso
    androidTestImplementation "androidx.test.espresso:espresso-intents:$espressoVersion"

    // Fragment Scenario Testing
    debugImplementation "androidx.fragment:fragment-testing:$fragment_version"
    debugImplementation("androidx.fragment:fragment-ktx:$fragment_version")
    debugImplementation("androidx.test:core:$fragment_version")
    debugImplementation("androidx.test:rules:$fragment_version")
    debugImplementation("androidx.test:runner:$fragment_version")
    debugImplementation "androidx.test.ext:junit:$extJUnitVersion"
    debugImplementation "androidx.test.ext:junit-ktx:$extJUnitVersion"
//    debugImplementation "androidx.test.ext:truth:$extTruthVersion"
//    debugImplementation "org.robolectric:robolectric:$robolectricVersion"
}